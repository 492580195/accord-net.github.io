<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>HiddenMarkovModel.Generate Method (Int32)</title>
    <meta name="Language" content="en-us" />
    <meta name="Microsoft.Help.Id" content="M:Accord.Statistics.Models.Markov.HiddenMarkovModel.Generate(System.Int32)" />
    <meta name="Description" content="Generates a random vector of observations from the model." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.Statistics.Models.Markov" />
    <meta name="file" content="M_Accord_Statistics_Models_Markov_HiddenMarkovModel_Generate" />
    <meta name="guid" content="M_Accord_Statistics_Models_Markov_HiddenMarkovModel_Generate" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Namespaces" tocid="R_Project_Accord_NET">Accord.NET Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="N_Accord_Statistics_Models_Markov.htm" title="Accord.Statistics.Models.Markov" tocid="N_Accord_Statistics_Models_Markov">Accord.Statistics.Models.Markov</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="T_Accord_Statistics_Models_Markov_HiddenMarkovModel.htm" title="HiddenMarkovModel Class" tocid="T_Accord_Statistics_Models_Markov_HiddenMarkovModel">HiddenMarkovModel Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="Methods_T_Accord_Statistics_Models_Markov_HiddenMarkovModel.htm" title="HiddenMarkovModel Methods" tocid="Methods_T_Accord_Statistics_Models_Markov_HiddenMarkovModel">HiddenMarkovModel Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="Overload_Accord_Statistics_Models_Markov_HiddenMarkovModel_Generate.htm" title="Generate Method " tocid="Overload_Accord_Statistics_Models_Markov_HiddenMarkovModel_Generate">Generate Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_Statistics_Models_Markov_HiddenMarkovModel_Generate.htm" title="Generate Method (Int32)" tocid="M_Accord_Statistics_Models_Markov_HiddenMarkovModel_Generate">Generate Method (Int32)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_Statistics_Models_Markov_HiddenMarkovModel_Generate_1.htm" title="Generate Method (Int32, Int32[], Double)" tocid="M_Accord_Statistics_Models_Markov_HiddenMarkovModel_Generate_1">Generate Method (Int32, Int32[], Double)</a></div></div></div><div id="TocResize" class="tocResize" onmousedown="OnMouseDown(event);"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize"><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize"></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">HiddenMarkovModel<span id="LST896C5056_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST896C5056_0?cpp=::|nu=.");</script>Generate Method (Int32)</td>
          </tr>
        </table>
        <span class="introStyle"></span>
        <div class="summary">
              Generates a random vector of observations from the model.
            </div>
        <p> </p>
        <strong>Namespace:</strong> <a href="N_Accord_Statistics_Models_Markov.htm">Accord.Statistics.Models.Markov</a><br /><strong>Assembly:</strong> Accord.Statistics (in Accord.Statistics.dll) Version: 2.13.1<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">int</span>[] <span class="identifier">Generate</span>(
	<span class="identifier">int</span> <span class="parameter">samples</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">Generate</span> ( 
	<span class="parameter">samples</span> <span class="keyword">As</span> <span class="identifier">Integer</span>
) <span class="keyword">As</span> <span class="identifier">Integer</span>()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">samples</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LST896C5056_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST896C5056_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />The number of samples to generate.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <span id="LST896C5056_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST896C5056_2?cpp=array&lt;");</script><a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">Int32</a><span id="LST896C5056_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST896C5056_3?cpp=&gt;|vb=()|nu=[]");</script><br />A random vector of observations drawn from the model.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Accord.Math.Tools.SetupGenerator(<span class="highlight-number">42</span>);

<span class="highlight-comment">// Consider some phrases:</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">string</span>[][] phrases =
{
    <span class="highlight-keyword">new</span>[] { <span class="highlight-literal">"those"</span>, <span class="highlight-literal">"are"</span>, <span class="highlight-literal">"sample"</span>, <span class="highlight-literal">"words"</span>, <span class="highlight-literal">"from"</span>, <span class="highlight-literal">"a"</span>, <span class="highlight-literal">"dictionary"</span> },
    <span class="highlight-keyword">new</span>[] { <span class="highlight-literal">"those"</span>, <span class="highlight-literal">"are"</span>, <span class="highlight-literal">"sample"</span>, <span class="highlight-literal">"words"</span> },
    <span class="highlight-keyword">new</span>[] { <span class="highlight-literal">"sample"</span>, <span class="highlight-literal">"words"</span>, <span class="highlight-literal">"are"</span>, <span class="highlight-literal">"words"</span> },
    <span class="highlight-keyword">new</span>[] { <span class="highlight-literal">"those"</span>, <span class="highlight-literal">"words"</span> },
    <span class="highlight-keyword">new</span>[] { <span class="highlight-literal">"those"</span>, <span class="highlight-literal">"are"</span>, <span class="highlight-literal">"words"</span> },
    <span class="highlight-keyword">new</span>[] { <span class="highlight-literal">"words"</span>, <span class="highlight-literal">"from"</span>, <span class="highlight-literal">"a"</span>, <span class="highlight-literal">"dictionary"</span> },
    <span class="highlight-keyword">new</span>[] { <span class="highlight-literal">"those"</span>, <span class="highlight-literal">"are"</span>, <span class="highlight-literal">"words"</span>, <span class="highlight-literal">"from"</span>, <span class="highlight-literal">"a"</span>, <span class="highlight-literal">"dictionary"</span> }
};

<span class="highlight-comment">// Let's begin by transforming them to sequence of</span>
<span class="highlight-comment">// integer labels using a codification codebook:</span>
<span class="highlight-keyword">var</span> codebook = <span class="highlight-keyword">new</span> Codification(<span class="highlight-literal">"Words"</span>, phrases);

<span class="highlight-comment">// Now we can create the training data for the models:</span>
<span class="highlight-keyword">int</span>[][] sequence = codebook.Translate(<span class="highlight-literal">"Words"</span>, phrases);

<span class="highlight-comment">// To create the models, we will specify a forward topology,</span>
<span class="highlight-comment">// as the sequences have definite start and ending points.</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">var</span> topology = <span class="highlight-keyword">new</span> Forward(states: <span class="highlight-number">4</span>);
<span class="highlight-keyword">int</span> symbols = codebook[<span class="highlight-literal">"Words"</span>].Symbols; <span class="highlight-comment">// We have 7 different words</span>

<span class="highlight-comment">// Create the hidden Markov model</span>
HiddenMarkovModel hmm = <span class="highlight-keyword">new</span> HiddenMarkovModel(topology, symbols);

<span class="highlight-comment">// Create the learning algorithm</span>
BaumWelchLearning teacher = <span class="highlight-keyword">new</span> BaumWelchLearning(hmm);

<span class="highlight-comment">// Teach the model about the phrases</span>
<span class="highlight-keyword">double</span> error = teacher.Run(sequence);

<span class="highlight-comment">// Now, we can ask the model to generate new samples</span>
<span class="highlight-comment">// from the word distributions it has just learned:</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">int</span>[] sample = hmm.Generate(<span class="highlight-number">3</span>);

<span class="highlight-comment">// And the result will be: "those", "are", "words".</span>
<span class="highlight-keyword">string</span>[] result = codebook.Translate(<span class="highlight-literal">"Words"</span>, sample);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Accord_Statistics_Models_Markov_HiddenMarkovModel.htm">HiddenMarkovModel Class</a></div><div class="seeAlsoStyle"><a href="Overload_Accord_Statistics_Models_Markov_HiddenMarkovModel_Generate.htm">Generate Overload</a></div><div class="seeAlsoStyle"><a href="N_Accord_Statistics_Models_Markov.htm">Accord.Statistics.Models.Markov Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2014. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
      <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>