<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>SampleConverter Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="SampleConverter class" />
    <meta name="System.Keywords" content="Accord.Audio.SampleConverter class" />
    <meta name="System.Keywords" content="SampleConverter class, about SampleConverter class" />
    <meta name="Microsoft.Help.F1" content="Accord.Audio.SampleConverter" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Audio.SampleConverter" />
    <meta name="Description" content="Static methods to convert between different sample formats." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.Audio" />
    <meta name="file" content="T_Accord_Audio_SampleConverter" />
    <meta name="guid" content="T_Accord_Audio_SampleConverter" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="N_Accord_Audio.htm" title="Accord.Audio" tocid="N_Accord_Audio">Accord.Audio</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="T_Accord_Audio_SampleConverter.htm" title="SampleConverter Class" tocid="T_Accord_Audio_SampleConverter">SampleConverter Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="Methods_T_Accord_Audio_SampleConverter.htm" title="SampleConverter Methods" tocid="Methods_T_Accord_Audio_SampleConverter">SampleConverter Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize"><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize"></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">SampleConverter Class</td>
          </tr>
        </table>
        <span class="introStyle"></span>
        <div class="summary">
              Static methods to convert between different sample formats.
            </div>
        <div class="collapsibleAreaRegion">
          <span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0">
            <img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span>
        </div>
        <div id="ID0RBSection" class="collapsibleSection">
          <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LSTA48B4CAC_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a>
          <br />  <span class="selflink">Accord.Audio<span id="LSTA48B4CAC_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SampleConverter</span><br /></div>
        <p> </p>
        <strong>Namespace:</strong> <a href="N_Accord_Audio.htm">Accord.Audio</a><br /><strong>Assembly:</strong> Accord.Audio (in Accord.Audio.dll) Version: 3.0.2<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">SampleConverter</span></pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">SampleConverter</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID3RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert.htm">Convert(Byte, Int16<span id="LSTA48B4CAC_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_2?cpp=%");</script>)</a></td><td><div class="summary">
              Converts a unsigned 8-bit byte sample
              into a 16-bit short integer sample.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_1.htm">Convert(Byte, Int32<span id="LSTA48B4CAC_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_3?cpp=%");</script>)</a></td><td><div class="summary">
              Converts a unsigned 8-bit byte sample
              into a 32-bit integer sample.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_2.htm">Convert(Byte, Single<span id="LSTA48B4CAC_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_4?cpp=%");</script>)</a></td><td><div class="summary">
              Converts a unsigned 8-bit byte sample
              into a 32-bit floating point sample.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_3.htm">Convert(<span id="LSTA48B4CAC_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_5?cpp=array&lt;");</script>Byte<span id="LSTA48B4CAC_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_6?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_7?cpp=array&lt;");</script>Int16<span id="LSTA48B4CAC_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_8?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts an array of unsigned 8-bit byte samples
              into an array of 16-bit short integer samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_4.htm">Convert(<span id="LSTA48B4CAC_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_9?cpp=array&lt;");</script>Byte<span id="LSTA48B4CAC_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_10?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_11?cpp=array&lt;");</script>Int32<span id="LSTA48B4CAC_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_12?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts an array of unsigned 8-bit byte samples
              into an array of 32-bit integer samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_5.htm">Convert(<span id="LSTA48B4CAC_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_13?cpp=array&lt;");</script>Byte<span id="LSTA48B4CAC_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_14?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_15?cpp=array&lt;");</script>Single<span id="LSTA48B4CAC_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_16?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts an array of unsigned 8-bit byte samples
              into an array of 32-bit floating point samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_6.htm">Convert(<span id="LSTA48B4CAC_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_17?cpp=array&lt;");</script><span id="LSTA48B4CAC_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_18?cpp=array&lt;");</script>Byte<span id="LSTA48B4CAC_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_19?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_20?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_21?cpp=array&lt;");</script><span id="LSTA48B4CAC_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_22?cpp=array&lt;");</script>Int16<span id="LSTA48B4CAC_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_23?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_24?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a matrix of unsigned 8-bit byte samples
              into a array of 16-bit short integer samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_7.htm">Convert(<span id="LSTA48B4CAC_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_25?cpp=array&lt;");</script><span id="LSTA48B4CAC_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_26?cpp=array&lt;");</script>Byte<span id="LSTA48B4CAC_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_27?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_28?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_29?cpp=array&lt;");</script><span id="LSTA48B4CAC_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_30?cpp=array&lt;");</script>Int32<span id="LSTA48B4CAC_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_31?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_32?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a matrix of unsigned 8-bit byte samples
              into a matrix of 32-bit integer samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_8.htm">Convert(<span id="LSTA48B4CAC_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_33?cpp=array&lt;");</script><span id="LSTA48B4CAC_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_34?cpp=array&lt;");</script>Byte<span id="LSTA48B4CAC_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_35?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_36?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_37?cpp=array&lt;");</script><span id="LSTA48B4CAC_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_38?cpp=array&lt;");</script>Single<span id="LSTA48B4CAC_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_39?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_40?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a matrix of unsigned 8-bit byte samples
              into a matrix of 32-bit floating-point samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_9.htm">Convert(Int16, Byte<span id="LSTA48B4CAC_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_41?cpp=%");</script>)</a></td><td><div class="summary">
              Converts a signed 16-bit integer sample
              into a 8-bit unsigned byte sample.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_10.htm">Convert(Int16, Double<span id="LSTA48B4CAC_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_42?cpp=%");</script>)</a></td><td><div class="summary">
              Converts a signed 16-bit integer sample
              into a 64-bit floating point sample.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_11.htm">Convert(Int16, Int32<span id="LSTA48B4CAC_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_43?cpp=%");</script>)</a></td><td><div class="summary">
              Converts a signed 16-bit integer sample
              into a 32-bit signed integer sample.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_12.htm">Convert(Int16, Single<span id="LSTA48B4CAC_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_44?cpp=%");</script>)</a></td><td><div class="summary">
              Converts a signed 16-bit integer sample
              into a 32-bit floating point sample.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_13.htm">Convert(<span id="LSTA48B4CAC_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_45?cpp=array&lt;");</script>Int16<span id="LSTA48B4CAC_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_46?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_47?cpp=array&lt;");</script>Byte<span id="LSTA48B4CAC_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_48?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a array of signed 16-bit integer samples
              into a array of 8-bit unsigned byte samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_14.htm">Convert(<span id="LSTA48B4CAC_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_49?cpp=array&lt;");</script>Int16<span id="LSTA48B4CAC_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_50?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_51?cpp=array&lt;");</script>Double<span id="LSTA48B4CAC_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_52?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a array of signed 16-bit integer samples
              into a array of 64-bit floating point samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_15.htm">Convert(<span id="LSTA48B4CAC_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_53?cpp=array&lt;");</script>Int16<span id="LSTA48B4CAC_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_54?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_55?cpp=array&lt;");</script>Int32<span id="LSTA48B4CAC_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_56?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a array of signed 16-bit integer samples
              into a array of 32-bit signed integer samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_16.htm">Convert(<span id="LSTA48B4CAC_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_57?cpp=array&lt;");</script>Int16<span id="LSTA48B4CAC_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_58?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_59?cpp=array&lt;");</script>Single<span id="LSTA48B4CAC_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_60?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a array of signed 16-bit integer samples
              into a array of 32-bit floating point samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_17.htm">Convert(<span id="LSTA48B4CAC_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_61?cpp=array&lt;");</script><span id="LSTA48B4CAC_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_62?cpp=array&lt;");</script>Int16<span id="LSTA48B4CAC_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_63?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_64?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_65?cpp=array&lt;");</script><span id="LSTA48B4CAC_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_66?cpp=array&lt;");</script>Byte<span id="LSTA48B4CAC_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_67?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_68?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a matrix of signed 16-bit integer samples
              into a matrix of 8-bit unsigned byte samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_18.htm">Convert(<span id="LSTA48B4CAC_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_69?cpp=array&lt;");</script><span id="LSTA48B4CAC_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_70?cpp=array&lt;");</script>Int16<span id="LSTA48B4CAC_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_71?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_72?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_73?cpp=array&lt;");</script><span id="LSTA48B4CAC_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_74?cpp=array&lt;");</script>Double<span id="LSTA48B4CAC_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_75?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_76?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a matrix of signed 16-bit integer samples
              into a matrix of 64-bit floating point samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_19.htm">Convert(<span id="LSTA48B4CAC_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_77?cpp=array&lt;");</script><span id="LSTA48B4CAC_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_78?cpp=array&lt;");</script>Int16<span id="LSTA48B4CAC_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_79?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_80?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_81?cpp=array&lt;");</script><span id="LSTA48B4CAC_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_82?cpp=array&lt;");</script>Int32<span id="LSTA48B4CAC_83"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_83?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_84"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_84?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a matrix of signed 16-bit integer samples
              into a matrix of 32-bit signed integer samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_20.htm">Convert(<span id="LSTA48B4CAC_85"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_85?cpp=array&lt;");</script><span id="LSTA48B4CAC_86"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_86?cpp=array&lt;");</script>Int16<span id="LSTA48B4CAC_87"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_87?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_88"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_88?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_89"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_89?cpp=array&lt;");</script><span id="LSTA48B4CAC_90"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_90?cpp=array&lt;");</script>Single<span id="LSTA48B4CAC_91"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_91?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_92"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_92?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a matrix of signed 16-bit integer samples
              into a matrix of 32-bit floating point samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_21.htm">Convert(Int32, Byte<span id="LSTA48B4CAC_93"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_93?cpp=%");</script>)</a></td><td><div class="summary">
              Converts a signed 32-bit integer sample
              into a 8-bit unsigned byte sample.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_22.htm">Convert(Int32, Int16<span id="LSTA48B4CAC_94"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_94?cpp=%");</script>)</a></td><td><div class="summary">
              Converts a signed 32-bit integer sample
              into a 16-bit signed integer sample.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_23.htm">Convert(Int32, Int32<span id="LSTA48B4CAC_95"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_95?cpp=%");</script>)</a></td><td><div class="summary">
              Converts a signed 32-bit integer sample
              into a 32-bit floating point sample.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_24.htm">Convert(Int32, Single<span id="LSTA48B4CAC_96"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_96?cpp=%");</script>)</a></td><td><div class="summary">
              Converts a signed 32-bit integer sample
              into a 32-bit float-point sample.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_25.htm">Convert(<span id="LSTA48B4CAC_97"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_97?cpp=array&lt;");</script>Int32<span id="LSTA48B4CAC_98"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_98?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_99"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_99?cpp=array&lt;");</script>Byte<span id="LSTA48B4CAC_100"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_100?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a array of signed 32-bit integer samples
              into a array of 8-bit unsigned byte samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_26.htm">Convert(<span id="LSTA48B4CAC_101"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_101?cpp=array&lt;");</script>Int32<span id="LSTA48B4CAC_102"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_102?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_103"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_103?cpp=array&lt;");</script>Int16<span id="LSTA48B4CAC_104"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_104?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a array of signed 32-bit integer samples
              into a array of 16-bit signed integer samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_27.htm">Convert(<span id="LSTA48B4CAC_105"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_105?cpp=array&lt;");</script>Int32<span id="LSTA48B4CAC_106"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_106?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_107"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_107?cpp=array&lt;");</script>Int32<span id="LSTA48B4CAC_108"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_108?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a array of signed 32-bit integer samples
              into a array of 32-bit floating point samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_28.htm">Convert(<span id="LSTA48B4CAC_109"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_109?cpp=array&lt;");</script>Int32<span id="LSTA48B4CAC_110"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_110?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_111"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_111?cpp=array&lt;");</script>Single<span id="LSTA48B4CAC_112"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_112?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a array of signed 32-bit integer samples
              into a array of 32-bit float-point samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_29.htm">Convert(<span id="LSTA48B4CAC_113"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_113?cpp=array&lt;");</script><span id="LSTA48B4CAC_114"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_114?cpp=array&lt;");</script>Int32<span id="LSTA48B4CAC_115"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_115?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_116"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_116?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_117"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_117?cpp=array&lt;");</script><span id="LSTA48B4CAC_118"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_118?cpp=array&lt;");</script>Byte<span id="LSTA48B4CAC_119"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_119?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_120"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_120?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a matrix of signed 32-bit integer samples
              into a matrix of 8-bit unsigned byte samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_30.htm">Convert(<span id="LSTA48B4CAC_121"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_121?cpp=array&lt;");</script><span id="LSTA48B4CAC_122"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_122?cpp=array&lt;");</script>Int32<span id="LSTA48B4CAC_123"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_123?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_124"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_124?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_125"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_125?cpp=array&lt;");</script><span id="LSTA48B4CAC_126"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_126?cpp=array&lt;");</script>Int16<span id="LSTA48B4CAC_127"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_127?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_128"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_128?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a matrix of signed 32-bit integer samples
              into a matrix of 16-bit signed integer samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_31.htm">Convert(<span id="LSTA48B4CAC_129"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_129?cpp=array&lt;");</script><span id="LSTA48B4CAC_130"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_130?cpp=array&lt;");</script>Int32<span id="LSTA48B4CAC_131"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_131?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_132"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_132?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_133"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_133?cpp=array&lt;");</script><span id="LSTA48B4CAC_134"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_134?cpp=array&lt;");</script>Single<span id="LSTA48B4CAC_135"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_135?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_136"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_136?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a matrix of signed 32-bit integer samples
              into a matrix of 32-bit float-point samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_32.htm">Convert(Single, Byte<span id="LSTA48B4CAC_137"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_137?cpp=%");</script>)</a></td><td><div class="summary">
              Converts a signed 32-bit float sample
              into a 8-bit unsigned byte sample.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_33.htm">Convert(Single, Int16<span id="LSTA48B4CAC_138"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_138?cpp=%");</script>)</a></td><td><div class="summary">
              Converts a 32-bit float sample
              into a 16-bit integer sample.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_34.htm">Convert(<span id="LSTA48B4CAC_139"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_139?cpp=array&lt;");</script>Single<span id="LSTA48B4CAC_140"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_140?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_141"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_141?cpp=array&lt;");</script>Byte<span id="LSTA48B4CAC_142"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_142?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a array of signed 32-bit float samples
              into a array of 8-bit unsigned byte samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_35.htm">Convert(<span id="LSTA48B4CAC_143"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_143?cpp=array&lt;");</script>Single<span id="LSTA48B4CAC_144"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_144?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_145"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_145?cpp=array&lt;");</script>Int16<span id="LSTA48B4CAC_146"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_146?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a array of 32-bit float samples
              into a array of 16-bit integer samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_36.htm">Convert(<span id="LSTA48B4CAC_147"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_147?cpp=array&lt;");</script><span id="LSTA48B4CAC_148"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_148?cpp=array&lt;");</script>Single<span id="LSTA48B4CAC_149"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_149?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_150"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_150?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_151"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_151?cpp=array&lt;");</script><span id="LSTA48B4CAC_152"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_152?cpp=array&lt;");</script>Byte<span id="LSTA48B4CAC_153"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_153?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_154"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_154?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a matrix of signed 32-bit float samples
              into a matrix of 8-bit unsigned byte samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_37.htm">Convert(<span id="LSTA48B4CAC_155"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_155?cpp=array&lt;");</script><span id="LSTA48B4CAC_156"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_156?cpp=array&lt;");</script>Single<span id="LSTA48B4CAC_157"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_157?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_158"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_158?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_159"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_159?cpp=array&lt;");</script><span id="LSTA48B4CAC_160"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_160?cpp=array&lt;");</script>Int16<span id="LSTA48B4CAC_161"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_161?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_162"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_162?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a matrix of 32-bit float samples
              into a matrix of 16-bit integer samples.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Audio_SampleConverter_Convert_38.htm">Convert(<span id="LSTA48B4CAC_163"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_163?cpp=array&lt;");</script><span id="LSTA48B4CAC_164"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_164?cpp=array&lt;");</script>Single<span id="LSTA48B4CAC_165"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_165?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_166"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_166?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTA48B4CAC_167"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_167?cpp=array&lt;");</script><span id="LSTA48B4CAC_168"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_168?cpp=array&lt;");</script>Int32<span id="LSTA48B4CAC_169"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_169?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTA48B4CAC_170"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA48B4CAC_170?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Converts a matrix of signed 32-bit integer samples
              into a matrix of 32-bit floating point samples.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
              Code is mainly based on information available on the original
              C source code pa_converters.c from Portable Audio I/O Library.</p><p>
              This class try to be as fast as possible without using unsafe code.</p><p>
              Dither isn't currently supported. Currently supported conversions
              are 'to' and 'from' conversions between the following most common
              PCM format:</p><p><ul><li>Integer 8-bit (byte)</li><li>Integer 16-bit (Int16)</li><li>Integer 32-bit (Int32)</li><li>Single precision 32-bit floating point (float)</li></ul></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID5RBSection" class="collapsibleSection">
              To use it, just call Convert. The compiler will automatically detect
              which method to call based on your data types.
              
              <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Suppose we have a collection of samples in PCM-16 format</span>
<span class="highlight-comment">// and wish to convert it into IEEE-32 floating point format:</span>

<span class="highlight-keyword">int</span>[]   pcm16Samples = <span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>  [<span class="highlight-number">3</span>] { <span class="highlight-number">1</span>, <span class="highlight-number">2</span>, <span class="highlight-number">3</span> }; <span class="highlight-comment">// source</span>
<span class="highlight-keyword">float</span>[] floatSamples = <span class="highlight-keyword">new</span> <span class="highlight-keyword">float</span>[<span class="highlight-number">3</span>];             <span class="highlight-comment">// target</span>

<span class="highlight-comment">// Call convert passing the source samples. Converted</span>
<span class="highlight-comment">// IEEE samples in will be stored in the target array.</span>
SampleConverter.Convert(pcm16samples, floatSamples);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_Audio.htm">Accord.Audio Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2015. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
      <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>