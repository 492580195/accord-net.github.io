<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>HiddenConditionalRandomField(T) Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="HiddenConditionalRandomField%3CT%3E class" />
    <meta name="System.Keywords" content="Accord.Statistics.Models.Fields.HiddenConditionalRandomField%3CT%3E class" />
    <meta name="System.Keywords" content="HiddenConditionalRandomField%3CT%3E class, about HiddenConditionalRandomField%3CT%3E class" />
    <meta name="System.Keywords" content="HiddenConditionalRandomField(Of T) class" />
    <meta name="System.Keywords" content="Accord.Statistics.Models.Fields.HiddenConditionalRandomField(Of T) class" />
    <meta name="System.Keywords" content="HiddenConditionalRandomField(Of T) class, about HiddenConditionalRandomField(Of T) class" />
    <meta name="Microsoft.Help.F1" content="Accord.Statistics.Models.Fields.HiddenConditionalRandomField`1" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Statistics.Models.Fields.HiddenConditionalRandomField`1" />
    <meta name="Description" content="Hidden Conditional Random Field (HCRF)." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.Statistics.Models.Fields" />
    <meta name="file" content="T_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1" />
    <meta name="guid" content="T_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="G_Accord_Statistics.htm" title="Accord.Statistics Namespaces" tocid="G_Accord_Statistics">Accord.Statistics Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="N_Accord_Statistics_Models_Fields.htm" title="Accord.Statistics.Models.Fields" tocid="N_Accord_Statistics_Models_Fields">Accord.Statistics.Models.Fields</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="T_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1.htm" title="HiddenConditionalRandomField(T) Class" tocid="T_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1">HiddenConditionalRandomField(T) Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1__ctor.htm" title="HiddenConditionalRandomField(T) Constructor " tocid="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1__ctor">HiddenConditionalRandomField(T) Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="Methods_T_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1.htm" title="HiddenConditionalRandomField(T) Methods" tocid="Methods_T_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1">HiddenConditionalRandomField(T) Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="Properties_T_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1.htm" title="HiddenConditionalRandomField(T) Properties" tocid="Properties_T_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1">HiddenConditionalRandomField(T) Properties</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize"><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize"></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">HiddenConditionalRandomField<span id="LST959B014A_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">T</span><span id="LST959B014A_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Class</td>
          </tr>
        </table>
        <span class="introStyle"></span>
        <div class="summary">
               Hidden Conditional Random Field (HCRF).
             </div>
        <div class="collapsibleAreaRegion">
          <span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0">
            <img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span>
        </div>
        <div id="ID0RBSection" class="collapsibleSection">
          <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST959B014A_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a>
          <br />  <span class="selflink">Accord.Statistics.Models.Fields<span id="LST959B014A_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>HiddenConditionalRandomField<span id="LST959B014A_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_4?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST959B014A_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_5?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span><br /></div>
        <p> </p>
        <strong>Namespace:</strong> <a href="N_Accord_Statistics_Models_Fields.htm">Accord.Statistics.Models.Fields</a><br /><strong>Assembly:</strong> Accord.Statistics (in Accord.Statistics.dll) Version: 2.15.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">HiddenConditionalRandomField</span>&lt;T&gt; : <span class="identifier">ICloneable</span>
</pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">SerializableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">HiddenConditionalRandomField</span>(<span class="keyword">Of</span> T)
	<span class="keyword">Implements</span> <span class="identifier">ICloneable</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">T</span></dt><dd>The type of the observations modeled by the field.</dd></dl></div><p>The <span class="selflink">HiddenConditionalRandomField<span id="LST959B014A_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_6?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST959B014A_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_7?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1__ctor.htm">HiddenConditionalRandomField<span id="LST959B014A_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_8?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST959B014A_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_9?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
              Initializes a new instance of the <span class="selflink">HiddenConditionalRandomField<span id="LST959B014A_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_10?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST959B014A_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_11?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> class.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_Clone.htm">Clone</a></td><td><div class="summary">
              Creates a new object that is a copy of the current instance.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_Compute.htm">Compute(<span id="LST959B014A_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_12?cpp=array&lt;");</script>T<span id="LST959B014A_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_13?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Computes the most likely output for the given observations.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_Compute_1.htm">Compute(<span id="LST959B014A_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_14?cpp=array&lt;");</script>T<span id="LST959B014A_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_15?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double<span id="LST959B014A_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_16?cpp=%");</script>)</a></td><td><div class="summary">
              Computes the most likely output for the given observations.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_Compute_2.htm">Compute(<span id="LST959B014A_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_17?cpp=array&lt;");</script>T<span id="LST959B014A_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_18?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST959B014A_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_19?cpp=array&lt;");</script>Double<span id="LST959B014A_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_20?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST959B014A_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_21?cpp=%");</script>)</a></td><td><div class="summary">
              Computes the most likely output for the given observations.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_Decode.htm">Decode(<span id="LST959B014A_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_22?cpp=array&lt;");</script>T<span id="LST959B014A_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_23?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
              Computes the most likely state labels for the given observations,
              returning the overall sequence probability for this model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_Decode_1.htm">Decode(<span id="LST959B014A_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_24?cpp=array&lt;");</script>T<span id="LST959B014A_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_25?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Double<span id="LST959B014A_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_26?cpp=%");</script>)</a></td><td><div class="summary">
              Computes the most likely state labels for the given observations,
              returning the overall sequence probability for this model.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/bsc2ak47" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a> is equal to the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/4k87zsw7" target="_blank">Finalize</a></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/zdee4b3y" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as a hash function for a particular type. </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_Load.htm">Load(Stream)</a></td><td><div class="summary">
              Loads a random field from a stream.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_Load_1.htm">Load(String)</a></td><td><div class="summary">
              Loads a random field from a file.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_LogLikelihood.htm">LogLikelihood(<span id="LST959B014A_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_27?cpp=array&lt;");</script>T<span id="LST959B014A_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_28?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
              Computes the log-likelihood that the given 
              observations belong to the desired output.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_LogLikelihood_2.htm">LogLikelihood(<span id="LST959B014A_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_29?cpp=array&lt;");</script><span id="LST959B014A_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_30?cpp=array&lt;");</script>T<span id="LST959B014A_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_31?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST959B014A_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_32?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST959B014A_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_33?cpp=array&lt;");</script>Int32<span id="LST959B014A_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_34?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Computes the log-likelihood that the given 
              observations belong to the desired outputs.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_LogLikelihood_1.htm">LogLikelihood(<span id="LST959B014A_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_35?cpp=array&lt;");</script>T<span id="LST959B014A_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_36?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, <span id="LST959B014A_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_37?cpp=array&lt;");</script>Double<span id="LST959B014A_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_38?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST959B014A_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_39?cpp=%");</script>)</a></td><td><div class="summary">
              Computes the log-likelihood that the given 
              observations belong to the desired output.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_LogLikelihood_3.htm">LogLikelihood(<span id="LST959B014A_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_40?cpp=array&lt;");</script><span id="LST959B014A_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_41?cpp=array&lt;");</script>T<span id="LST959B014A_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_42?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST959B014A_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_43?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST959B014A_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_44?cpp=array&lt;");</script>Int32<span id="LST959B014A_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_45?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST959B014A_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_46?cpp=array&lt;");</script><span id="LST959B014A_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_47?cpp=array&lt;");</script>Double<span id="LST959B014A_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_48?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST959B014A_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_49?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST959B014A_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_50?cpp=%");</script>)</a></td><td><div class="summary">
              Computes the log-likelihood that the given 
              observations belong to the desired outputs.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_LogPartition.htm">LogPartition(<span id="LST959B014A_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_51?cpp=array&lt;");</script>T<span id="LST959B014A_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_52?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Computes the log-partition function ln Z(x).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_LogPartition_1.htm">LogPartition(<span id="LST959B014A_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_53?cpp=array&lt;");</script>T<span id="LST959B014A_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_54?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
              Computes the log-partition function ln Z(x,y).
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/57ctke0a" target="_blank">MemberwiseClone</a></td><td><div class="summary">Creates a shallow copy of the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_Partition.htm">Partition(<span id="LST959B014A_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_55?cpp=array&lt;");</script>T<span id="LST959B014A_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_56?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Computes the partition function Z(x).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_Partition_1.htm">Partition(<span id="LST959B014A_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_57?cpp=array&lt;");</script>T<span id="LST959B014A_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_58?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
              Computes the partition function Z(x,y).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_Save.htm">Save(Stream)</a></td><td><div class="summary">
              Saves the random field to a stream.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_Save_1.htm">Save(String)</a></td><td><div class="summary">
              Saves the random field to a stream.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/7bxwbwt2" target="_blank">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LST959B014A_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_59?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST959B014A_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_60?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID6RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_Function.htm">Function</a></td><td><div class="summary">
              Gets the potential function encompassing
              all feature functions for this model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Models_Fields_HiddenConditionalRandomField_1_Outputs.htm">Outputs</a></td><td><div class="summary">
              Gets the number of outputs assumed by the model.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID7RBSection" class="collapsibleSection"><p>
               Conditional random fields (CRFs) are a class of statistical modeling method often applied 
               in pattern recognition and machine learning, where they are used for structured prediction. 
               Whereas an ordinary classifier predicts a label for a single sample without regard to "neighboring"
               samples, a CRF can take context into account; e.g., the linear chain CRF popular in natural 
               language processing predicts sequences of labels for sequences of input samples.</p><p>
               While Conditional Random Fields can be seen as a generalization of Markov models, Hidden
               Conditional Random Fields can be seen as a generalization of Hidden Markov Model Classifiers.
               The (linear-chain) Conditional Random Field is the discriminative counterpart of the Markov model.
               An observable Markov Model assumes the sequences of states y to be visible, rather than hidden.
               Thus they can be used in a different set of problems than the hidden Markov models. Those models
               are often used for sequence component labeling, also known as part-of-sequence tagging. After a model
               has been trained, they are mostly used to tag parts of a sequence using the Viterbi algorithm.
               This is very handy to perform, for example, classification of parts of a speech utterance, such as 
               classifying phonemes inside an audio signal.  </p><p>    
               References:
               <ul><li><a href="http://www.codeproject.com/Articles/559535/Sequence-Classifiers-in-Csharp-Part-II-Hidden-Cond">
                   C. Souza, Sequence Classifiers in C# - Part II: Hidden Conditional Random Fields. CodeProject. Available at:
                   http://www.codeproject.com/Articles/559535/Sequence-Classifiers-in-Csharp-Part-II-Hidden-Cond </a></li><li>
                   Chan, Tony F.; Golub, Gene H.; LeVeque, Randall J. (1983). Algorithms for 
                   Computing the Sample Variance: Analysis and Recommendations. The American
                   Statistician 37, 242-247.</li></ul></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID8RBSection" class="collapsibleSection"><p>
               In this example, we will create a sequence classifier using a hidden Markov
               classifier. Afterwards, we will transform this Markov classifier into an
               equivalent Hidden Conditional Random Field by choosing a suitable feature
               function.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABCBA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EABCBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EABCBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Let's say we would like to do a very simple mechanism for</span>
<span class="highlight-comment">// gesture recognition. In this example, we will be trying to</span>
<span class="highlight-comment">// create a classifier that can distinguish between the words</span>
<span class="highlight-comment">// "hello", "car", and "wardrobe". </span>

<span class="highlight-comment">// Let's say we decided to acquire some data, and we asked some</span>
<span class="highlight-comment">// people to perform those words in front of a Kinect camera, and,</span>
<span class="highlight-comment">// using Microsoft's SDK, we were able to captured the x and y</span>
<span class="highlight-comment">// coordinates of each hand while the word was being performed.</span>

<span class="highlight-comment">// Let's say we decided to represent our frames as:</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">//    double[] frame = { leftHandX, leftHandY, rightHandX, rightHandY };</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// Since we captured words, this means we captured sequences of</span>
<span class="highlight-comment">// frames as we described above. Let's write some of those as </span>
<span class="highlight-comment">// rough examples to explain how gesture recognition can be done:</span>

<span class="highlight-keyword">double</span>[][] hello =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span> }, <span class="highlight-comment">// let's say the word</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>, <span class="highlight-number">0.1</span> }, <span class="highlight-comment">// hello took 6 frames</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>, <span class="highlight-number">0.1</span> }, <span class="highlight-comment">// to be recorded.</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.1</span>, <span class="highlight-number">1.1</span> },
};

<span class="highlight-keyword">double</span>[][] car =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span> }, <span class="highlight-comment">// the car word</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0.1</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span> }, <span class="highlight-comment">// took only 4.</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.1</span>, <span class="highlight-number">0.0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span> },
};

<span class="highlight-keyword">double</span>[][] wardrobe =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span> }, <span class="highlight-comment">// same for the</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0.1</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span> }, <span class="highlight-comment">// wardrobe word.</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0.0</span>, <span class="highlight-number">0.1</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0.1</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span> },
};

<span class="highlight-comment">// Here, please note that a real-world example would involve *lots*</span>
<span class="highlight-comment">// of samples for each word. Here, we are considering just one from</span>
<span class="highlight-comment">// each class which is clearly sub-optimal and should _never_ be done</span>
<span class="highlight-comment">// on practice. For example purposes, however, please disregard this.</span>

<span class="highlight-comment">// Those are the words we have in our vocabulary:</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">double</span>[][][] words = { hello, car, wardrobe }; 

<span class="highlight-comment">// Now, let's associate integer labels with them. This is needed</span>
<span class="highlight-comment">// for the case where there are multiple samples for each word.</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">int</span>[] labels = { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">2</span> };


<span class="highlight-comment">// We will create our classifiers assuming an independent</span>
<span class="highlight-comment">// Gaussian distribution for each component in our feature</span>
<span class="highlight-comment">// vectors (like assuming a Naive Bayes assumption).</span>

<span class="highlight-keyword">var</span> initial = <span class="highlight-keyword">new</span> Independent&lt;NormalDistribution&gt;
(
    <span class="highlight-keyword">new</span> NormalDistribution(<span class="highlight-number">0</span>, <span class="highlight-number">1</span>), 
    <span class="highlight-keyword">new</span> NormalDistribution(<span class="highlight-number">0</span>, <span class="highlight-number">1</span>), 
    <span class="highlight-keyword">new</span> NormalDistribution(<span class="highlight-number">0</span>, <span class="highlight-number">1</span>), 
    <span class="highlight-keyword">new</span> NormalDistribution(<span class="highlight-number">0</span>, <span class="highlight-number">1</span>)  
);


<span class="highlight-comment">// Now, we can proceed and create our classifier. </span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">int</span> numberOfWords = <span class="highlight-number">3</span>;  <span class="highlight-comment">// we are trying to distinguish between 3 words</span>
<span class="highlight-keyword">int</span> numberOfStates = <span class="highlight-number">5</span>; <span class="highlight-comment">// this value can be found by trial-and-error</span>

<span class="highlight-keyword">var</span> hmm = <span class="highlight-keyword">new</span> HiddenMarkovClassifier&lt;Independent&lt;NormalDistribution&gt;&gt;
(
    classes: numberOfWords, 
    topology: <span class="highlight-keyword">new</span> Forward(numberOfStates), <span class="highlight-comment">// word classifiers should use a forward topology</span>
    initial: initial
);

<span class="highlight-comment">// Create a new learning algorithm to train the sequence classifier</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> HiddenMarkovClassifierLearning&lt;Independent&lt;NormalDistribution&gt;&gt;(hmm,

    <span class="highlight-comment">// Train each model until the log-likelihood changes less than 0.001</span>
    modelIndex =&gt; <span class="highlight-keyword">new</span> BaumWelchLearning&lt;Independent&lt;NormalDistribution&gt;&gt;(hmm.Models[modelIndex])
    {
        Tolerance = <span class="highlight-number">0.001</span>,
        Iterations = <span class="highlight-number">100</span>,

        <span class="highlight-comment">// This is necessary so the code doesn't blow up when it realize</span>
        <span class="highlight-comment">// there is only one sample per word class. But this could also be</span>
        <span class="highlight-comment">// needed in normal situations as well.</span>
        <span class="highlight-comment">// </span>
        FittingOptions = <span class="highlight-keyword">new</span> IndependentOptions()
        {
            InnerOption = <span class="highlight-keyword">new</span> NormalOptions() { Regularization = <span class="highlight-number">1</span>e<span class="highlight-number">-5</span> }
        }
    }
);

<span class="highlight-comment">// Finally, we can run the learning algorithm!</span>
<span class="highlight-keyword">double</span> logLikelihood = teacher.Run(words, labels);

<span class="highlight-comment">// At this point, the classifier should be successfully </span>
<span class="highlight-comment">// able to distinguish between our three word classes:</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">int</span> tc1 = hmm.Compute(hello);    <span class="highlight-comment">// should be 0</span>
<span class="highlight-keyword">int</span> tc2 = hmm.Compute(car);      <span class="highlight-comment">// should be 1</span>
<span class="highlight-keyword">int</span> tc3 = hmm.Compute(wardrobe); <span class="highlight-comment">// should be 2</span>


<span class="highlight-comment">// Now, we can use the Markov classifier to initialize a HCRF</span>
<span class="highlight-keyword">var</span> function = <span class="highlight-keyword">new</span> MarkovMultivariateFunction(hmm);
<span class="highlight-keyword">var</span> hcrf = <span class="highlight-keyword">new</span> HiddenConditionalRandomField&lt;<span class="highlight-keyword">double</span>[]&gt;(function);

<span class="highlight-comment">// We can check that both are equivalent, although they have</span>
<span class="highlight-comment">// formulations that can be learned with different methods</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; words.Length; i++)
{
    <span class="highlight-comment">// Should be the same</span>
    <span class="highlight-keyword">int</span> expected = hmm.Compute(words[i]);
    <span class="highlight-keyword">int</span> actual = hcrf.Compute(words[i]);

    <span class="highlight-comment">// Should be the same</span>
    <span class="highlight-keyword">double</span> h0 = hmm.LogLikelihood(words[i], <span class="highlight-number">0</span>);
    <span class="highlight-keyword">double</span> c0 = hcrf.LogLikelihood(words[i], <span class="highlight-number">0</span>);

    <span class="highlight-keyword">double</span> h1 = hmm.LogLikelihood(words[i], <span class="highlight-number">1</span>);
    <span class="highlight-keyword">double</span> c1 = hcrf.LogLikelihood(words[i], <span class="highlight-number">1</span>);

    <span class="highlight-keyword">double</span> h2 = hmm.LogLikelihood(words[i], <span class="highlight-number">2</span>);
    <span class="highlight-keyword">double</span> c2 = hcrf.LogLikelihood(words[i], <span class="highlight-number">2</span>);
}


<span class="highlight-comment">// Now we can learn the HCRF using one of the best learning</span>
<span class="highlight-comment">// algorithms available, Resilient Backpropagation learning:</span>

<span class="highlight-comment">// Create a learning algorithm</span>
<span class="highlight-keyword">var</span> rprop = <span class="highlight-keyword">new</span> HiddenResilientGradientLearning&lt;<span class="highlight-keyword">double</span>[]&gt;(hcrf)
{
    Iterations = <span class="highlight-number">50</span>,
    Tolerance = <span class="highlight-number">1</span>e<span class="highlight-number">-5</span>
};

<span class="highlight-comment">// Run the algorithm and learn the models</span>
<span class="highlight-keyword">double</span> error = rprop.Run(words, labels);

<span class="highlight-comment">// At this point, the HCRF should be successfully </span>
<span class="highlight-comment">// able to distinguish between our three word classes:</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">int</span> hc1 = hcrf.Compute(hello);    <span class="highlight-comment">// Should be 0</span>
<span class="highlight-keyword">int</span> hc2 = hcrf.Compute(car);      <span class="highlight-comment">// Should be 1</span>
<span class="highlight-keyword">int</span> hc3 = hcrf.Compute(wardrobe); <span class="highlight-comment">// Should be 2</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABCBA");</script><p>
               In order to see how this HCRF can be trained to the data, please take a look 
               at the <a href="T_Accord_Statistics_Models_Fields_Learning_HiddenResilientGradientLearning_1.htm">HiddenResilientGradientLearning<span id="LST959B014A_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_61?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST959B014A_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST959B014A_62?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> page. Resilient Propagation
               is one of the best algorithms for HCRF training.</p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID9RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_Statistics_Models_Fields.htm">Accord.Statistics.Models.Fields Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2015. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
      <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>